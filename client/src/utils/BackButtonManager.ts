import { TelegramAPI } from './telegram-api-core';

interface NavigationHandler {
  id: string;
  handler: () => void;
  priority: number;
}

class BackButtonManager {
  private handlers: NavigationHandler[] = [];
  private isVisible = false;
  private currentHandler: (() => void) | null = null;

  /**
   * –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ back button —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º
   * @param id - —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
   * @param handler - —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
   * @param priority - –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç (–±–æ–ª—å—à–µ = –≤—ã—à–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç)
   */
  register(id: string, handler: () => void, priority: number = 0) {
    // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å —Ç–∞–∫–∏–º –∂–µ ID
    this.unregister(id);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
    this.handlers.push({ id, handler, priority });
    
    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É (–±–æ–ª—å—à–µ = –≤—ã—à–µ)
    this.handlers.sort((a, b) => b.priority - a.priority);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
    this.updateActiveHandler();
    
    console.log(`üîô BackButton: –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω '${id}' (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç: ${priority})`);
  }

  /**
   * –£–¥–∞–ª—è–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ ID
   */
  unregister(id: string) {
    const initialLength = this.handlers.length;
    this.handlers = this.handlers.filter(h => h.id !== id);
    
    if (this.handlers.length !== initialLength) {
      console.log(`üîô BackButton: —É–¥–∞–ª–µ–Ω '${id}'`);
      this.updateActiveHandler();
    }
  }

  /**
   * –û–±–Ω–æ–≤–ª—è–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ (—Å –Ω–∞–∏–≤—ã—Å—à–∏–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º)
   */
  private updateActiveHandler() {
    const topHandler = this.handlers[0];
    
    if (topHandler) {
      this.show(topHandler.handler);
      console.log(`üîô BackButton: –∞–∫—Ç–∏–≤–µ–Ω '${topHandler.id}' (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç: ${topHandler.priority})`);
    } else {
      this.hide();
      console.log('üîô BackButton: —Å–∫—Ä—ã—Ç (–Ω–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤)');
    }
  }

  /**
   * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç back button —Å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–º
   */
  private show(handler: () => void) {
    // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
    if (this.currentHandler && TelegramAPI.tg?.BackButton) {
      // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ (–µ—Å–ª–∏ API –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç)
      try {
        TelegramAPI.tg.BackButton.onClick(() => {});
      } catch (e) {
        // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –æ—á–∏—Å—Ç–∫–∏
      }
    }
    
    this.currentHandler = handler;
    this.isVisible = true;
    
    if (TelegramAPI.tg?.BackButton) {
      TelegramAPI.tg.BackButton.onClick(handler);
      TelegramAPI.tg.BackButton.show();
    }
  }

  /**
   * –°–∫—Ä—ã–≤–∞–µ—Ç back button
   */
  private hide() {
    if (this.isVisible && TelegramAPI.tg?.BackButton) {
      TelegramAPI.tg.BackButton.hide();
    }
    this.currentHandler = null;
    this.isVisible = false;
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –ø–æ–∫–∞–∑–∞–Ω –ª–∏ back button
   */
  isShown(): boolean {
    return this.isVisible;
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
   */
  getActiveHandlers(): string[] {
    return this.handlers.map(h => `${h.id} (${h.priority})`);
  }

  /**
   * –û—á–∏—â–∞–µ—Ç –≤—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
   */
  clear() {
    this.handlers = [];
    this.hide();
    console.log('üîô BackButton: –æ—á–∏—â–µ–Ω—ã –≤—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏');
  }
}

export const backButtonManager = new BackButtonManager();