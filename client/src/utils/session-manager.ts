import { apiService } from '../services/api';
import { TelegramAPI } from './telegram-api-core';

interface SessionData {
  id: string;
  userId: number;
  createdAt: string;
  lastActivity: string;
}

class SessionManager {
  private sessionId: string | null = null;
  private userId: number | null = null;
  private pingInterval: NodeJS.Timeout | null = null;
  private isClosing = false;

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Å—Å–∏–∏
  async initSession(sessionData: SessionData) {
    this.sessionId = sessionData.id;
    this.userId = sessionData.userId;
    
    console.log('üîë –°–µ—Å—Å–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞:', this.sessionId);
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º ping –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
    this.startPing();
    
    // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –∑–∞–∫—Ä—ã—Ç–∏–µ WebApp
    this.setupCloseHandlers();
  }

  // –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–π ping –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è —Å–µ—Å—Å–∏–∏
  private startPing() {
    if (this.pingInterval) {
      clearInterval(this.pingInterval);
    }
    
    this.pingInterval = setInterval(async () => {
      if (this.sessionId && !this.isClosing) {
        try {
          // –ü—Ä–æ—Å—Ç–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞
          await apiService.checkServerConnection();
        } catch (error) {
          console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–µ—Å—Å–∏–∏:', error);
        }
      }
    }, 5 * 60 * 1000); // 5 –º–∏–Ω—É—Ç
  }

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∑–∞–∫—Ä—ã—Ç–∏—è
  private setupCloseHandlers() {
    // Telegram WebApp —Å–æ–±—ã—Ç–∏—è
    if (TelegramAPI.isAvailable()) {
      // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è WebApp
      TelegramAPI.tg?.onEvent('webAppClose', () => {
        console.log('üì± WebApp –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è');
        this.closeSession();
      });
      
      // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–∏–¥–∏–º–æ—Å—Ç–∏
      TelegramAPI.tg?.onEvent('viewportChanged', (data: any) => {
        if (data.isStateStable && !data.isExpanded) {
          console.log('üì± WebApp —Å–≤–µ—Ä–Ω—É—Ç–æ');
          // –ù–µ –∑–∞–∫—Ä—ã–≤–∞–µ–º —Å–µ—Å—Å–∏—é –ø—Ä–∏ —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏–∏, —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø–æ–ª–Ω–æ–º –∑–∞–∫—Ä—ã—Ç–∏–∏
        }
      });
    }

    // –ë—Ä–∞—É–∑–µ—Ä–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è
    window.addEventListener('beforeunload', () => {
      console.log('üåê –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è');
      this.closeSession();
    });

    window.addEventListener('unload', () => {
      console.log('üåê –°—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—ã–≥—Ä—É–∂–∞–µ—Ç—Å—è');
      this.closeSession();
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ—Ç–µ—Ä–∏ —Ñ–æ–∫—É—Å–∞ (–¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤)
    document.addEventListener('visibilitychange', () => {
      if (document.hidden) {
        console.log('üëÅÔ∏è –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–∫—Ä—ã—Ç–æ');
        // –ù–µ –∑–∞–∫—Ä—ã–≤–∞–µ–º —Å–µ—Å—Å–∏—é –ø—Ä–∏ —Å–∫—Ä—ã—Ç–∏–∏, —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø–æ–ª–Ω–æ–º –∑–∞–∫—Ä—ã—Ç–∏–∏
      } else {
        console.log('üëÅÔ∏è –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ–∫–∞–∑–∞–Ω–æ');
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å —Å–µ—Å—Å–∏–∏ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–∏
        this.checkSessionValidity();
      }
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ (pagehide –±–æ–ª–µ–µ –Ω–∞–¥–µ–∂–µ–Ω —á–µ–º beforeunload)
    window.addEventListener('pagehide', () => {
      console.log('üì± –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–∫—Ä—ã—Ç–∞ (–º–æ–±–∏–ª—å–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ)');
      this.closeSession();
    });
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ —Å–µ—Å—Å–∏–∏
  private async checkSessionValidity() {
    if (this.sessionId && !this.isClosing) {
      try {
        // –ü—Ä–æ—Å—Ç–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞
        await apiService.checkServerConnection();
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–µ—Å—Å–∏–∏:', error);
      }
    }
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–π —Å–µ—Å—Å–∏–∏
  private handleInvalidSession() {
    console.warn('üö´ –°–µ—Å—Å–∏—è –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞');
    this.cleanup();
    
    // –ú–æ–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    if (TelegramAPI.isAvailable()) {
      TelegramAPI.showAlert('–°–µ—Å—Å–∏—è –∏—Å—Ç–µ–∫–ª–∞. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.');
    }
  }

  // –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–µ—Å—Å–∏–∏
  async closeSession() {
    if (this.isClosing || !this.sessionId) {
      return;
    }
    
    this.isClosing = true;
    console.log('üîí –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–µ—Å—Å–∏—é:', this.sessionId);
    
    try {
      // –ü—Ä–æ—Å—Ç–æ –æ—á–∏—â–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
      console.log('‚úÖ –°–µ—Å—Å–∏—è –∑–∞–∫—Ä—ã—Ç–∞');
    } finally {
      this.cleanup();
    }
  }

  // –û—á–∏—Å—Ç–∫–∞ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
  private cleanup() {
    if (this.pingInterval) {
      clearInterval(this.pingInterval);
      this.pingInterval = null;
    }
    
    this.sessionId = null;
    this.userId = null;
    this.isClosing = false;
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏
  getSessionId(): string | null {
    return this.sessionId;
  }

  getUserId(): number | null {
    return this.userId;
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Å–µ—Å—Å–∏–∏
  isActive(): boolean {
    return this.sessionId !== null && !this.isClosing;
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å–∏–Ω–≥–ª—Ç–æ–Ω
export const sessionManager = new SessionManager();