/**
 * –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ CORS
 */
export class CorsUtils {
  static ALLOWED_ORIGINS = [
    'http://localhost:3000',
    'http://localhost:3001', 
    'https://web.telegram.org',
    /\.devtunnels\.ms$/,  // Dev tunnels
    /\.ngrok\.io$/,       // Ngrok tunnels
    /\.loca\.lt$/,        // LocalTunnel
    /\.cloudpub\.ru$/,    // CloudPub tunnels
    /\.herokuapp\.com$/,  // Heroku
    /\.vercel\.app$/,     // Vercel
    /\.netlify\.app$/     // Netlify
  ];

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω –ª–∏ origin
   */
  static isOriginAllowed(origin) {
    if (!origin) {
      return true; // –†–∞–∑—Ä–µ—à–∞–µ–º –∑–∞–ø—Ä–æ—Å—ã –±–µ–∑ origin
    }
    
    return this.ALLOWED_ORIGINS.some(allowed => {
      if (typeof allowed === 'string') {
        return origin === allowed;
      }
      return allowed.test(origin);
    });
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ CORS –¥–ª—è Express
   */
  static corsHandler(origin, callback) {
    console.log('üîç CORS check for origin:', origin);
    
    if (!origin) {
      console.log('‚úÖ CORS: –†–∞–∑—Ä–µ—à–µ–Ω –∑–∞–ø—Ä–æ—Å –±–µ–∑ origin');
      return callback(null, true);
    }
    
    if (CorsUtils.isOriginAllowed(origin)) {
      console.log('‚úÖ CORS: –†–∞–∑—Ä–µ—à–µ–Ω origin:', origin);
      callback(null, true);
    } else {
      console.log('‚ùå CORS: –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω origin:', origin);
      callback(new Error('–ù–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–æ CORS –ø–æ–ª–∏—Ç–∏–∫–æ–π'));
    }
  }

  /**
   * –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è CORS –¥–ª—è Express
   */
  static getCorsConfig() {
    return {
      origin: this.corsHandler,
      credentials: true,
      methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'],
      allowedHeaders: [
        'Content-Type', 
        'Authorization', 
        'Accept', 
        'X-Requested-With',
        'X-Telegram-User',
        'X-Telegram-Init-Data'
      ],
      exposedHeaders: ['X-Total-Count', 'X-Page-Count']
    };
  }
}